'\" et
.nh   \" Disable hyphenation
.ad l \" Flush-left
.
.\" Adaptive monospace fonts
.ie t \{
.	ds `  \\f(CR
.	ds '  \\fP
.	ds C? \\f(CR
.	ds C! \\f(CR
.	ds CW \\f(CR
.	ds CI \\f(CI
.	ds CB \\f(CB
.	ie \\n(.g .ds CE \\f[CBI]
.	el        .ds CE \\f(CB \}
.el \{
.	ds `  \\(lq\\fI
.	ds '  \\fP\\(rq
.	ds C? \\fI
.	ds C! \\fB
.	ds CW \\f1
.	ds CI \\fI
.	ds CB \\fB
.	ds CE \\f(BI \}
.\" End of font setup
.
.\" Whether HTML is the targeted output medium
.if '\*(.T'html'  .nr H 1
.if '\*(.T'xhtml' .nr H 1
.
.\" Use monochrome hyperlinks
.defcolor pdf:href.colour rgb 0.0 0.0 0.0
.
.\" More obvious tilde: \*~ instead of \(ap
.ds ~ \(ap
.
.\" Nicer-looking C++ (taken from Pod headers)
.ie t .ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.el   .ds C+ C++
.
.
.\" Monospace text
.de ``
.	ds a \\f(CW
.	ds z \\f1
.	if n \{\
.		ds a `
.		ds z `
.	\}
.	ie \\n(.$>2 \\$1\\*a\\$2\\*z\\$3
.	el \\*(f2   \\*a\\$1\\*z\\$2
..
.
.\" Variable reference
.de VAR
.	ds a \\$1
.	ds z \\$2
'	if \\n(.$>2 'if 'R'\\$1' \{\
'		ds a \\$2
'		ds z \\$3 \}
.
.	\" HTML output: generate a real variable tag
.	ie \\nH=1 \{\
.		HTML <var>
.		ie \\n(.u=0 \\*a
.		el  \h'-1n'\\*a\h'-1n'
.		HTML </var>
.		ie \\n(.u=0 \\*z
.		el \h'-1n'\\*z
.	\}
.
.	\" Everything else: italicise name
.	el \\*(CI\\*a\\fP\\*z
.	rm a
.	rm z
..
.
.\" Bare URL, underlined or hyperlinked
.de LK
'	ie '\*(.T'pdf' \l'\w,\\$1,u\(ul'\h'-\w,\\$1,u'\\$1\\$2
'	el 'ie t \{\
'		UR \\$1
'		UE \\$2 \}
'	el \\fI\\$1\\fP\\$2
..
.
.\" JavaScript object
.de JS
'	ds s https://mdn.io/\\$1
'	ie \\nH=1 <a href="\\*s"><code>\\$1</code></a>\\$2
'	el 'ie '\*(.T'pdf' \{\
'		pdfhref W -D "\\*s" -A \&\\$2 -- \\*(C?\\$1\\fP\}
'	el 'ie t \{\
'		UR \\*s
\\*(C?\\$1\\fP\\$2
'		UE \}
'	el \\*(CR\\$1\fP\\$2
.	rm s
.	rm n
..
.
.\" Describe a V8 flag option
.de V8
.	rr pA
.	rm N
.	if '\\$2'(INTERNAL)' .ds N Internal use only.
.	if '\\$2'(TEST)'     .ds N Testing only.
.	if '\\$2'(WIP)'      .ds N In progress.
.	if '\\$2'|' .nr pA 1
.	if !'\\*N'' .nr pA 1
.	if \\n(pA=1 \{\
.		ds T \\$3
.		ds D \\$4
.	\}
.	dX \\$1
.	TP
\\*(CB \-\-\\$1 \\fR
.	ie !'\\*T'' \{\
.		B "Type:\t"
\\*T
.		br
.		B "Default:\t"
.		if t .ft CW
\\*D
.		if t .ft
.		if !'\\*N'' \\fB\\*N\\fR
.		sp 1l
.	\}
.	el .if !'\\*N'' \{\
.		B \\*N
.		sp 1l
.	\}
.	rm T
..
.\" GNU Troff: Debug method to trace option definitions
.if \n(.g .if !\n(.C=1 \{\
.	ds V8-OPTS "DEFINED OPTIONS:"
.	de dX
.		if \\nD=1    .tm Defining: \\$1
.		ie d V8_\\$1 .tm Already defined: \\$1
.		el \{\
.			as V8-OPTS \\$1
.			ds V8_\\$1 1
.		\}
.	.
.\}
.
.\"======================================================
.\" BEGIN DOCUMENT
.TH V8 1 "March 16, 2023" "V8 11.3.180" V8
.
.SH NAME
.BR v8 " \(em Google\(cqs JavaScript engine
.

.SH SYNOPSIS
.
.\" Modify man(7) macros to respect monospace setting (controlled by `\n(CW` register)
.nr CW 0
.de B
.	ie (\\n(CW=1) \\*(CB\\$*\fR
.	el \fB\\$*\fR
..
.de I
.	ie (\\n(CW=1) \\*(CI\\$*\fR
.	el \fI\\$*\fR
..
.de BI
.	ie (\\n(CW=1) \\*(CB\\$1\\*(CI\\$2\\*(CB\\$3\\*(CI\\$4\\*(CB\\$5\\*(CI\\$6\\*(CB\\$7\\*(CI\\$8\\*(CB\\$9\fR
.	el \fB\\$1\fI\\$2\fB\\$3\fI\\$4\fB\\$5\fI\\$6\fB\\$7\fI\\$8\fB\\$9\fR
..
.de BR
.	ie (\\n(CW=1) \\*(CB\\$1\\*(CW\\$2\\*(CB\\$3\\*(CW\\$4\\*(CB\\$5\\*(CW\\$6\\*(CB\\$7\\*(CW\\$8\\*(CB\\$9\fR
.	el \fB\\$1\fR\\$2\fB\\$3\fR\\$4\fB\\$5\fR\\$6\fB\\$7\fR\\$8\fB\\$9\fR
..
.de IB
.	ie (\\n(CW=1) \\*(CI\\$1\\*(CB\\$2\\*(CI\\$3\\*(CB\\$4\\*(CI\\$5\\*(CB\\$6\\*(CI\\$7\\*(CB\\$8\\*(CI\\$9\fR
.	el \fI\\$1\fB\\$2\fI\\$3\fB\\$4\fI\\$5\fB\\$6\fI\\$7\fB\\$8\fI\\$9\fR
..
.de IR
.	ie (\\n(CW=1) \\*(CI\\$1\\*(CW\\$2\\*(CI\\$3\\*(CW\\$4\\*(CI\\$5\\*(CW\\$6\\*(CI\\$7\\*(CW\\$8\\*(CI\\$9\fR
.	el \fI\\$1\fR\\$2\fI\\$3\fR\\$4\fI\\$5\fR\\$6\fI\\$7\fR\\$8\fI\\$9\fR
..
.de RB
.	ie (\\n(CW=1) \\*(CW\\$1\\*(CB\\$2\\*(CW\\$3\\*(CB\\$4\\*(CW\\$5\\*(CB\\$6\\*(CW\\$7\\*(CB\\$8\\*(CW\\$9\fR
.	el \fR\\$1\fB\\$2\fR\\$3\fB\\$4\fR\\$5\fB\\$6\fR\\$7\fB\\$8\fR\\$9\fR
..
.de RI
.	ie (\\n(CW=1) \\*(CW\\$1\\*(CI\\$2\\*(CW\\$3\\*(CI\\$4\\*(CW\\$5\\*(CI\\$6\\*(CW\\$7\\*(CI\\$8\\*(CW\\$9\fR
.	el \fR\\$1\fI\\$2\fR\\$3\fI\\$4\fR\\$5\fI\\$6\fR\\$7\fI\\$8\fR\\$9\fR
..
.
.nr CW 1
.ie t .B shell\t
.el   .B shell
.RI [ options ]
.RB [ \-\-shell ]
.RI [ file... ]
.br
.ie t .B d8\t
.el   .B d8\ \ \ \&
.RI [ options ]
.RB [ \-e\~ "\*(CIstring\fP]"
.RB [ \-\-lcov =\*(CIpath\fP]
.RB [ \-\-shell ]
.RI [[ "\*(CB\-\-module\fP" ] " file..." ]
.nr CW 0
.

.SH OPTIONS
.nr CW 1
.TP 6
.B \-\-
Capture all remaining arguments in JavaScript.
.TP 6
.BI \-e " string"
Execute \fIstring\fR in V8.
.TP 6
.BI \-\-lcov\*(CW=\fP path
Write
.BR lcov (1)
compatible coverage info to \fIpath\fP.
.IP
Note: the
.`` =
separator is mandatory; something like \(lq\*(CB--lcov\*(CW\~\*(CIpath\fR\(rq will
.ie t .I not
.el   .B not
work.
.TP
.BI \-\-shell
Run an interactive JavaScript shell.
.TP
.B \-\-help
Print flags and usage message to stdout, then exit.
.TP
.B \-\-module
Execute \f(CIfile\fP as a JavaScript module.
.IP
Note: the \f(CB\-\-module\fP option is implicitly enabled for \*(CW*.mjs\fP files.
.nr CW 0
.

.SH V8 FLAGS
Option names beginning with
.RB \(lq no- \(rq
pertain to a boolean V8 flag enabled by default.

.\" BEGIN SCRAPE
.V8 abort-on-bad-builtin-profile-data
Flag for \*(C!mksnapshot\fP, abort if builtins profile can\(cqt be applied.

.V8 no-abort-on-contradictory-flags
Allow program to run even when called with contradictory flags.

.V8 abort-on-far-code-range
Abort if code range is allocated further away than 4GB from the
.`` .text
section.

.V8 abort-on-uncaught-exception
Abort program (dump core) when an uncaught exception is thrown.

.V8 no-adjust-os-scheduling-parameters
Don\(cqt adjust OS-specific scheduling parameters for the isolate.

.V8 no-allocation-buffer-parking
Disable buffer parking.

.V8 no-allocation-site-pretenuring
Don\(cqt pretenure with allocation sites.

.V8 no-allocation-site-tracking
Disable allocation site tracking.

.V8 allow-natives-for-differential-fuzzing
Only allow natives that\(cqre explicitly allowlisted for differential fuzzers.

.V8 allow-natives-syntax
Allow natives syntax.

.V8 allow-overwriting-for-next-flag
Temporarily disable flag contradiction so the next flag gets overwritten.

.V8 allow-unsafe-function-constructor
Allow invoking the function constructor without security checks.

.V8 always-osr
Always try to OSR functions.

.V8 always-sparkplug
Directly tier-up to Sparkplug code.

.V8 always-turbofan
Always try to optimise functions.

.V8 always-use-string-forwarding-table
Use string forwarding table instead of thin strings for all strings.

.V8 no-analyze-environment-liveness
Don\(cqt analyse liveness of environment slots and zap dead values.

.V8 arm-arch | String \(lqarmv8\(rq
Generate instructions for the selected ARM architecture if available: armv6, armv7, armv7+sudiv or armv8.

.V8 asm-wasm-lazy-compilation
Enable lazy compilation for asm-wasm modules.

.V8 assert-types
Generate runtime type assertions to test the typer.

.V8 no-async-stack-traces
Exclude async stack traces in
.JS Error.stack .

.V8 no-baseline-batch-compilation
Don\(cqt batch compile Sparkplug code.

.V8 baseline-batch-compilation-threshold | Int 4096
The estimated instruction size of a batch to trigger compilation.

.V8 no-better-code-range-allocation
Try harder to allocate code range near
.`` .text
section.
Works only for configurations with external code space and shared pointer compression cage.

.V8 no-builtin-subclassing
Disable subclassing support in built-in methods.

.V8 builtins-in-stack-traces
Show built-in functions in stack traces.

.V8 bytecode-old-age | Int 5
Number of GCs before we flush code.

.V8 bytecode-size-allowance-per-tick | Int 150
Increase the number of ticks required for optimisation by
.EQ
( bytecode"\."length / X ).
.EN

.V8 no-cache-prototype-transitions
Don\(cqt cache prototype transitions.

.V8 check-handle-count
Check there aren't too many handles at garbage collection.

.V8 clear-exceptions-on-js-entry
Clear pending exceptions when entering JavaScript.

.V8 clear-free-memory
Initialise free memory with 0.

.V8 code-comments
Emit comments in code disassembly; for more readable source positions you should add \*(C!--no-concurrent-recompilation\fP.

.V8 code-stats
Report code statistics after garbage collection.

.V8 no-compact
Don\(cqt perform compaction on full GCs based on V8\(cqs default heuristics.

.V8 no-compact-code-space
Don\(cqt perform code space compaction on full collections.

.V8 no-compact-code-space-with-stack
Don\(cqt perform code space compaction when finalising a full GC with stack.

.V8 compact-on-every-full-gc
Perform compaction on every full GC.

.V8 no-compact-with-stack
Don\(cqt perform compaction when finalising a full GC with stack.

.V8 no-compilation-cache
Disable compilation cache.

.V8 no-concurrent-array-buffer-sweeping
Don\(cqt sweep array buffers concurrently.

.V8 no-concurrent-cache-deserialization
Don't deserialise code caches in background threads.

.V8 no-concurrent-marking
Don\(cqt use concurrent marking.

.V8 concurrent-marking-max-worker-num | Int 7
Maximum worker number of concurrent marking, 0 for
.`` NumberOfWorkerThreads .

.V8 concurrent-minor-mc-marking
Perform young generation marking concurrently (experimental).

.V8 no-concurrent-osr
Disable concurrent on-stack replacement.

.V8 no-concurrent-recompilation
Force synchronous optimisation of hot functions.

.V8 concurrent-recompilation-delay | Int 0
Artificial compilation delay in ms.

.V8 concurrent-recompilation-queue-length | Int 8
The length of the concurrent compilation queue.

.V8 no-concurrent-sparkplug
Don\(cqt compile Sparkplug code in background threads.

.V8 concurrent-sparkplug-high-priority-threads
Use high-priority compiler threads for concurrent Sparkplug.

.V8 concurrent-sparkplug-max-threads | Uint 1
Maximum number of threads that concurrent Sparkplug can use (0 for unbounded).

.V8 no-concurrent-sweeping
Don\(cqt use concurrent sweeping.

.V8 conservative-stack-scanning
Use conservative stack scanning.

.V8 correctness-fuzzer-suppressions
Suppress certain unspecified behaviours to ease correctness fuzzing:
abort program when the stack overflows or a string exceeds maximum length (as opposed to throwing
.JS RangeError ),
and use a fixed suppression string for error messages.

.V8 cppgc-young-generation
Run young generation garbage collections in Oilpan (experimental).

.V8 cppheap-concurrent-marking
Use concurrent marking for CppHeap.

.V8 cppheap-incremental-marking
Use incremental marking for CppHeap.

.V8 cpu-profiler-sampling-interval | Int 1000
CPU profiler sampling interval in microseconds.

.V8 crash-on-aborted-evacuation
Crash when evacuation of page fails.

.V8 csa-trap-on-node | String \(lq\(rq
Trigger break point when a node with given id is created in given stub.
The format is: \(oq\c
.VAR StubName ,\c
.VAR NodeId \(cq.
.

.V8 no-debug-code
Don\(cqt generate extra code (assertions) for debugging.

.V8 default-to-experimental-regexp-engine
Execute regular expressions using the experimental engine where possible.

.V8 deopt-every-n-times | Int 0
Deoptimise every n times a deopt point is passed.

.V8 deopt-to-baseline
Deoptimise to baseline code when available.

.V8 detailed-error-stack-trace
Include arguments for each function call in the error stack frames array.

.V8 detailed-line-info
Always generate detailed line information for CPU profiling.

.V8 no-detect-ineffective-gcs-near-heap-limit
Don\(cqt trigger out-of-memory failure to avoid GC storm near heap limit.

.V8 dict-property-const-tracking
Use const tracking on dictionary properties.

.V8 disable-abortjs
Disable AbortJS runtime function.

.V8 disable-old-api-accessors
Disable old-style API accessors whose setters trigger through the prototype chain.

.V8 disable-write-barriers
Disable write barriers when GC is non-incremental and heap contains single generation.

.V8 disallow-code-generation-from-strings
Disallow
.`` eval
and friends.

.V8 dump-wasm-module
Dump WASM module bytes.

.V8 dump-wasm-module-path | String \(lq\(rq
Directory to dump WASM modules to.

.V8 embedded-src | String \(lq\(rq
Path for the generated embedded data file.
(\*(C!mksnapshot\fP only).

.V8 embedded-variant | String \(lq\(rq
Label to disambiguate symbols in embedded data file.
(\*(C!mksnapshot\fP only).

.V8 embedder-instance-types
Enable type checking based on instance types provided by the embedder.

.V8 enable-32dregs | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 no-enable-allocation-folding
Don\(cqt use allocation folding globally.

.V8 enable-armv7 | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 enable-armv8 | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 no-enable-avx
Disable use of AVX instructions if available.

.V8 no-enable-avx2
Disable use of AVX2 instructions if available.

.V8 no-enable-bmi1
Disable use of BMI1 instructions if available.

.V8 no-enable-bmi2
Disable use of BMI2 instructions if available.

.V8 enable-etw-stack-walking
Enable ETW (Event Tracking for Windows) stack walking.

.V8 enable-experimental-regexp-engine
Enable experimental regular expression engine for regexes which use the \*(C!/l\fP (\(lqlinear\(rq) flag.

.V8 enable-experimental-regexp-engine-on-excessive-backtracks
Fall back to a breadth-first regexp engine on excessive backtracking.

.V8 no-enable-fma3
Disable use of FMA3 instructions if available.

.V8 no-enable-lazy-source-positions
Don\(cqt skip generating source positions during initial compile, but regenerate when actually required.

.V8 no-enable-lzcnt
Disable use of LZCNT instruction if available.

.V8 enable-neon | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 no-enable-popcnt
Disable use of POPCNT instruction if available.

.V8 no-enable-regexp-unaligned-accesses
Disable unaligned accesses for the regexp engine.

.V8 no-enable-sahf
Disable use of SAHF instruction if available (X64 only).

.V8 no-enable-sealed-frozen-elements-kind
Disable sealed, frozen elements kind.

.V8 enable-sharedarraybuffer-per-context
Enable the
.JS SharedArrayBuffer
constructor per context.

.V8 no-enable-slow-asserts
Disable asserts that are slow to execute.

.V8 enable-source-at-csa-bind
Include source information in the binary at CSA bind locations.

.V8 no-enable-sse3
Disable use of SSE3 instructions if available.

.V8 no-enable-sse4-1
Disable use of SSE4.1 instructions if available.

.V8 no-enable-sse4-2
Disable use of SSE4.2 instructions if available.

.V8 no-enable-ssse3
Disable use of SSSE3 instructions if available.

.V8 enable-sudiv | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 enable-testing-opcode-in-wasm
Enable a testing opcode in WASM that is only implemented in TurboFan.

.V8 enable-third-party-heap
Use third-party heap.

.V8 enable-unconditional-write-barriers
Always use full write barriers.

.V8 enable-vfp3 | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 no-enable-wasm-arm64-generic-wrapper
Disallow use of the generic JS-to-WASM wrapper instead of per-signature wrappers on arm64.

.V8 ephemeron-fixpoint-iterations | Int 10
Number of fixpoint iterations it takes to switch to linear ephemeron algorithm.

.V8 exit-on-contradictory-flags
Exit with return code 0 on contradictory flags.

.V8 experimental
Indicate that V8 is running with experimental features enabled.
This flag is typically not set explicitly,
but instead enabled as an implication of other flags which enable experimental features.

.V8 no-experimental-flush-embedded-blob-icache
Disable an experiment used when evaluating icache flushing on certain CPUs.

.V8 experimental-stack-trace-frames
Enable experimental frames (API/Builtins) and stack trace layout.

.V8 experimental-value-unavailable
Enable experimental
.`` <value\~unavailable>
in scopes.

.V8 experimental-wasm-assume-ref-cast-succeeds
Assume
.`` ref.cast
always succeeds and skip the related type check (unsafe) for WASM.

.V8 experimental-wasm-branch-hinting
Enable prototype branch hinting for WASM.

.V8 experimental-wasm-compilation-hints
Enable prototype compilation hints section for WASM.

.V8 experimental-wasm-extended-const
Enable prototype extended constant expressions for WASM.

.V8 experimental-wasm-gc
Enable prototype garbage collection for WASM.

.V8 experimental-wasm-instruction-tracing
Enable prototype instruction tracing section for WASM.

.V8 experimental-wasm-js-inlining
Enable prototype inlining of small WebAssembly functions into JS for WASM.

.V8 experimental-wasm-memory64
Enable prototype
.`` memory64
for WASM.

.V8 experimental-wasm-pgo-from-file (WIP)
Read and use WASM PGO data from a local file.
Used for testing.

.V8 experimental-wasm-pgo-to-file (WIP)
Dump WASM PGO information to a local file.
Used for testing.

.V8 experimental-wasm-ref-cast-nop
Enable unsafe, experimental use of the
.`` ref.cast_nop
WebAssembly op-code.

.V8 experimental-wasm-relaxed-simd
Enable relaxed SIMD for WASM.

.V8 no-experimental-wasm-return-call
Disable prototype return call opcodes for WASM.

.V8 experimental-wasm-revectorize
Enable 128\(en to 256\(enbit revectorisation for Webassembly SIMD.

.V8 experimental-wasm-skip-bounds-checks
Enable prototype skipping of array bounds checks (unsafe) for WASM.

.V8 experimental-wasm-skip-null-checks
Enable prototype skipping of null checks for
.`` call.ref
and array and struct operations (unsafe) for WASM.

.V8 experimental-wasm-stack-switching
Enable prototype stack switching for WASM.

.V8 experimental-wasm-stringref
Enable prototype reference-typed strings for WASM.

.V8 experimental-wasm-type-reflection
Enable prototype WASM type reflection in JS for WASM.

.V8 experimental-wasm-typed-funcref
Enable prototype typed function references for WASM.

.V8 expose-async-hooks
Expose
.`` async_hooks
object.

.V8 expose-cputracemark-as | String \(lq\(rq
Expose
.`` cputracemark
extension under the specified name.

.V8 expose-externalize-string
Expose \*(CWexternalize\fP string extension.

.V8 expose-gc
Expose
.`` gc
extension.

.V8 expose-gc-as | String \(lq\(rq
Expose
.`` gc
extension under the specified name.

.V8 expose-ignition-statistics
Expose ignition-statistics extension (requires building with \*(C!--v8-enable-ignition-dispatch-counting\fP).

.V8 expose-inspector-scripts
Expose
.`` injected-script-source.js
for debugging.

.V8 expose-statistics
Expose statistics extension.

.V8 expose-trigger-failure
Expose trigger-failure extension.

.V8 no-expose-wasm
Don\(cqt expose WASM interface to JavaScript.

.V8 external-reference-stats
Print statistics on external references used during serialisation.

.V8 fast-forward-schedule
Fast-forward marking schedule.

.V8 fast-map-update
Enable fast map update by caching the migration target.

.V8 feedback-normalization
Feed back normalisation to constructors.

.V8 no-fixed-array-bounds-checks
Disable FixedArray bounds checks.

.V8 flush-baseline-code
Flush of baseline code when it has not been executed recently.

.V8 no-flush-bytecode
Don\(cqt flush bytecode that hasn\(cqt executed recently.

.V8 force-emit-interrupt-budget-checks
Force emit tier-up logic from all non-TurboFan code, even if it is the top enabled tier.

.V8 force-long-branches
Force all emitted branches to be in long mode (MIPS/PPC only).

.V8 force-marking-deque-overflows
Force overflows of marking deque by reducing its size to 64 words.

.V8 force-slow-path
Always take the slow path for builtins.

.V8 no-freeze-flags-after-init
Allow changes to flag values after initialising V8.

.V8 future
Implies all staged features that we want to ship in the not-too-far future.

.V8 fuzzer-gc-analysis
Print number of allocations and enable analysis mode for GC fuzz-testing, e.g. \*(C!--stress-marking\fP, \*(C!--stress-scavenge\fP.

.V8 fuzzer-random-seed | Int 0
Default seed for initialising fuzzer random generator (0, the default, means to use v8\(cqs random number generator seed).

.V8 fuzzing
Cause intrinsics to fail silently by returning
.`` undefined
for invalid usage.

.V8 gc-experiment-less-compaction
Use less compaction in non-memory reducing mode.

.V8 gc-fake-mmap | String \(lq/tmp/__v8_gc__\(rq
Specify the name of the file for fake gc mmap used in
.`` ll_prof .

.V8 gc-global
Always perform global GCs.

.V8 gc-interval | Int -1
Garbage collect after
.VAR N
allocations.

.V8 gc-memory-reducer-start-delay-ms | Int 8000
Delay before memory reducer start.

.V8 gc-stats | Int 0
Used by tracing internally to enable gc statistics.

.V8 gc-verbose
Print stuff during garbage collection.

.V8 gdbjit
Enable GDBJIT interface.

.V8 gdbjit-dump
Dump ELF objects with debug info to disk.

.V8 gdbjit-dump-filter | String \(lq\(rq
Dump only objects containing this substring.

.V8 gdbjit-full
Enable GDBJIT interface for all code objects.

.V8 no-global-ic-updated-flag
Cease tracking of inline cache changes, normally used in tier-up heuristics.

.V8 no-hard-abort
Don\(cqt abort by crashing.

.V8 harmony
Enable all completed Harmony features.

.V8 harmony-array-from-async (WIP)
Enable
.JS Array.fromAsync .

.V8 harmony-array-grouping
Enable array grouping.

.V8 no-harmony-atomics
Disable
.JS Atomics .

.V8 no-harmony-change-array-by-copy
Disable
.JS Array.prototype
methods that return a modified copy of the original.

.V8 no-harmony-import-assertions
Disable import assertions.

.V8 harmony-intl-best-fit-matcher (WIP)
Enable the
.JS Intl
.`` BestFitMatcher
algorithm.

.V8 harmony-intl-duration-format (WIP)
Enable Intl.DurationFormat API.

.V8 no-harmony-intl-number-format-v3
Disable version 3 of
.JS Intl.NumberFormat .

.V8 harmony-iterator-helpers (WIP)
Enable JavaScript iterator helpers.

.V8 harmony-json-parse-with-source
Enable source-text access from
.JS JSON.parse
reviver functions.

.V8 no-harmony-rab-gsab
Disable
.JS ResizableArrayBuffer
and
.JS GrowableSharedArrayBuffer .

.V8 harmony-rab-gsab-transfer
Enable
.JS ArrayBuffer .
transfer.

.V8 no-harmony-regexp-unicode-sets
Disable RegExp Unicode Sets.

.V8 harmony-shadow-realm (WIP)
Enable
.JS ShadowRealm .

.V8 no-harmony-sharedarraybuffer
Disable
.JS SharedArrayBuffer .

.V8 no-harmony-shipping
Disable all shipped Harmony features.

.V8 no-harmony-string-is-well-formed
Disable
.JS String.isWellFormed
and
.JS String.toWellFormed
methods.

.V8 harmony-struct (WIP)
Enable structs, shared structs, and shared arrays.

.V8 no-harmony-symbol-as-weakmap-key
Forbid the use of
.JS Symbol
values as
.JS WeakMap
keys.

.V8 harmony-temporal (WIP)
Enable
.JS Temporal .

.V8 harmony-weak-refs-with-cleanup-some (WIP)
Enable weak references with
.JS FinalizationRegistry.prototype.cleanupSome .

.V8 hash-seed | Uint64 0
Fixed seed to use to hash property keys (0 means random).
With snapshots this option cannot override the baked-in seed.

.V8 heap-growing-percent | Int 0
Specifies heap growing factor as
.EQ
( 1 + heap_growing_percent / 100 ).
.EN

.V8 heap-profiler-show-hidden-objects
Use
.`` native
node-type in snapshots instead of the
.`` hidden
type.

.V8 heap-profiler-trace-objects
Dump heap object allocations/movements/size_updates.

.V8 no-heap-profiler-use-embedder-graph
Don\(cqt use the new EmbedderGraph API to get embedder nodes.

.V8 heap-snapshot-string-limit | Int 1024
Truncate strings to this length in the heap snapshot.

.V8 heap-snapshot-verify
Verify that heap snapshot matches marking visitor behaviour.

.V8 histogram-interval | Int 600000
Time interval in ms for aggregating memory histograms.

.V8 no-huge-max-old-generation-size
Don\(cqt increase maximum size of the old space to 4 GB for x64 systems with the physical memory bigger than 16 GB.

.V8 no-icu-timezone-data
Don\(cqt get information about timezones from ICU.

.V8 no-ignition-elide-noneffectful-bytecodes
Don\(cqt elide bytecodes which won\(cqt have any external effect.

.V8 no-ignition-filter-expression-positions
Don\(cqt filter expression positions before the bytecode pipeline.

.V8 no-ignition-reo
Don\(cqt use ignition register equivalence optimiser.

.V8 no-ignition-share-named-property-feedback
Don\(cqt share feedback slots when loading the same named property from the same object.

.V8 no-incremental-marking
Don\(cqt use incremental marking.

.V8 incremental-marking-hard-trigger | Int 0
Threshold for starting incremental marking immediately in percent of available space:
.EQ
( "limit\~" - "\~size" ).
.EN

.V8 incremental-marking-soft-trigger | Int 0
Threshold for starting incremental marking via a task in percent of available space:
.EQ
( "limit\~" - "\~size" ).
.EN

.V8 no-incremental-marking-task
Don\(cqt use tasks for incremental marking.

.V8 no-incremental-marking-wrappers
Don\(cqt use incremental marking for marking wrappers.

.V8 initial-heap-size | size_t 0
Initial size of the heap (in MBytes).

.V8 initial-old-space-size | size_t 0
Initial old space size (in MBytes).

.V8 initial-shared-heap-size | size_t 0
Initial size of the shared heap (in MBytes).
Other heap-size flags (e.g., \*(C!--initial-heap-size\fP) take precedence.

.V8 no-inline-new
Don\(cqt use fast inline allocation.

.V8 no-internalize-on-the-fly
Don\(cqt internalise string keys for generic keyed ICs on the fly.

.V8 interpreted-frames-native-stack
Show interpreted frames on the native stack (useful for external profilers).

.V8 interrupt-budget | Int 67584
Interrupt budget which should be used for the profiler counter.

.V8 interrupt-budget-factor-for-feedback-allocation | Int 8
The interrupt budget factor (applied to bytecode size) for allocating feedback vectors, used when bytecode size is known.

.V8 interrupt-budget-for-feedback-allocation | Int 940
The fixed interrupt budget (in bytecode size) for allocating feedback vectors.

.V8 interrupt-budget-for-maglev | Int 30720
Interrupt budget which should be used for the profiler counter.

.V8 no-isolate-script-cache-ageing
Disable ageing of the isolate script cache.

.V8 jitless
Disable runtime allocation of executable memory.

.V8 no-lazy
Don\(cqt use lazy compilation.

.V8 lazy-compile-dispatcher
Enable compiler dispatcher.

.V8 lazy-compile-dispatcher-max-threads | Uint 0
Maximum threads for compiler dispatcher (0 for unbounded).

.V8 no-lazy-eval
Don\(cqt use lazy compilation during evaluation.

.V8 no-lazy-feedback-allocation
Don\(cqt allocate feedback vectors lazily.

.V8 lazy-new-space-shrinking
Enable the new lazy space-shrinking strategy.

.V8 no-lazy-streaming
Don\(cqt use lazy compilation during streaming.

.V8 no-liftoff
Disable Liftoff, the baseline compiler for WebAssembly.

.V8 liftoff-only
Don\(rqt use TurboFan compilation for WebAssembly.

.V8 lite-mode
Enable trade-off of performance for memory savings.

.V8 ll-prof
Enable low-level Linux profiler.

.V8 log
Minimal logging (no API, code, GC, suspect, or handles samples).

.V8 log-all
Log all events to the log file.

.V8 log-code
Log code events to the log file without profiling.

.V8 log-code-disassemble
Log all disassembled code to the log file.

.V8 no-log-colour
Don\(cqt use coloured output when logging.

.V8 log-deopt
Log deoptimisation.

.V8 log-feedback-vector
Log FeedbackVectors on first creation.

.V8 log-function-events
Log function events (parse, compile, execute) separately.

.V8 log-ic
Log inline cache state transitions for tools/IC-processor.

.V8 log-internal-timer-events
Time internal events.

.V8 log-maps
Log map creation.

.V8 no-log-maps-details
Don\(cqt log map details.

.V8 log-or-trace-osr
Internal helper flag, please use \*(C!--trace-osr\fP instead.

.V8 log-source-code
Log source code.

.V8 log-source-position
Log detailed source information.

.V8 logfile | String \(lqv8.log\(rq
Specify the
.VAR name
of the log file.
Use \*(CB\-\fP for console, and\*(CB+\fP for a temporary file.

.V8 no-logfile-per-isolate
Use a single log-file for each isolate.

.V8 maglev
Enable the Maglev optimising compiler.

.V8 maglev-assert
Insert extra assertion in Maglev code.

.V8 no-maglev-assert-stack-size
Don\(cqt insert stack size checks before every IR node.

.V8 maglev-break-on-entry
Insert an int3 on Maglev entries.

.V8 maglev-filter | String \(lq*\(rq
Optimisation filter for the Maglev compiler.

.V8 no-maglev-function-context-specialization
Disable function context specialisation in Maglev.

.V8 maglev-inlining
Enable inlining in the Maglev optimising compiler (experimental).

.V8 maglev-overwrite-budget
Whether Maglev should reset the interrupt budget.

.V8 no-maglev-reuse-stack-slots
Discard stack slots in the Maglev optimising compiler.

.V8 manual-evacuation-candidates-selection
Test mode only flag.
It allows a unit test to select evacuation candidates pages (requires \*(C!--stress-compaction\fP).

.V8 map-counters | String \(lq\(rq
Map counters to a file.

.V8 max-bytecode-size-for-early-opt | Int 81
Maximum bytecode length for a function to be optimised on the first tick.

.V8 max-heap-size | size_t 0
Maximum size of the heap (in MBytes).
Both \*(C!--max-semi-space-size\fP and \*(C!--max-old-space-size\fP take precedence.
All three flags cannot be specified at the same time.

.V8 max-inlined-bytecode-size | Int 460
Maximum size of bytecode for a single inlining.

.V8 max-inlined-bytecode-size-absolute | Int 4600
Maximum absolute size of bytecode considered for inlining.

.V8 max-inlined-bytecode-size-cumulative | Int 920
Maximum cumulative size of bytecode considered for inlining.

.V8 max-inlined-bytecode-size-small | Int 27
Maximum size of bytecode considered for small function inlining.

.V8 max-lazy
Ignore eager compilation hints.

.V8 max-maglev-inline-depth | Int 1
Maximum depth of functions that Maglev will inline.

.V8 max-maglev-inlined-bytecode-size | Int 460
Maximum size of bytecode for a single inlining.

.V8 max-maglev-inlined-bytecode-size-cumulative | Int 920
Maximum cumulative size of bytecode considered for inlining.

.V8 max-maglev-inlined-bytecode-size-small | Int 27
Maximum size of bytecode considered for small function inlining.

.V8 max-old-space-size | size_t 0
Maximum size of the old space (in MBytes).

.V8 max-opt | Uint 999
Set the maximal optimisation tier:
.TS
l blx .
0	Ignition/interpreter
1	Sparkplug/Baseline
2	Maglev
3	TurboFan
3+	Any
.TE

.V8 max-optimized-bytecode-size | Int 61440
Maximum bytecode size to be considered for optimisation; too high values may cause the compiler to hit (release) assertions.

.V8 max-semi-space-size | size_t 0
Maximum size of a semi-space (in MBytes), the new space consists of two semi-spaces.

.V8 max-serializer-nesting | Int 25
Maximum levels for nesting child serialisers.

.V8 max-shared-heap-size | size_t 0
Maximum size of the shared heap (in MBytes).
Other heap-size flags (e.g., \*(C!--max-shared-heap-size\fP) take precedence.

.V8 max-stack-trace-source-length | Int 300
Maximum length of function source code printed in a stack trace.

.V8 max-valid-polymorphic-map-count | Int 4
Maximum number of valid maps to track in \*(CWPOLYMORPHIC\fP state.

.V8 max-wasm-functions | Int 1000000
Maximum number of WASM functions supported in a module.

.V8 mcpu | String \(lqauto\(rq
Enable optimisation for a specific CPU.

.V8 mega-dom-ic
Use MegaDOM IC state for API objects.

.V8 no-memory-reducer
Don\(cqt use memory reducer.

.V8 no-memory-reducer-for-small-heaps
Don\(cqt use memory reducer for small heaps.

.V8 no-merge-background-deserialized-script-with-compilation-cache
Don\(cqt merge deserialised code cache data into existing scripts found within the Isolate compilation cache.

.V8 min-inlining-frequency | Float 0.15
Minimum frequency for inlining.

.V8 min-maglev-inlining-frequency | Float 0.1
Minimum frequency for inlining.

.V8 min-semi-space-size | size_t 0
Minimum size of a semi-space (in MBytes), the new space consists of two semi-spaces.

.V8 minor-mc
Perform young generation mark compact GCs (experimental).

.V8 minor-mc-task-trigger | Int 80
MinorMC task trigger, specified as a percentage of the current heap limit.

.V8 minor-mc-trace-fragmentation
Trace fragmentation after marking.

.V8 mock-arraybuffer-allocator
Use a mock
.JS ArrayBuffer
allocator for testing.

.V8 mock-arraybuffer-allocator-limit | size_t 0
Memory limit for mock
.JS ArrayBuffer
allocator used to simulate OOM for testing.

.V8 no-move-object-start
Disable moving of object starts.

.V8 no-native-code-counters
Don\(cqt generate extra code for manipulating stats counters.

.V8 no-omit-default-ctors
Omit calls to default constructors in bytecode.

.V8 no-opt
Optimise code using the TurboFan optimising compiler. Alias of \*(C!--turbofan\fP.

.V8 optimize-for-size
Enable optimisations which favour memory size over execution speed.

.V8 no-page-promotion
Don\(cqt promote pages based on utilisation.

.V8 page-promotion-threshold | Int 70
Minimum percentage of live bytes on a page to enable fast evacuation.

.V8 no-parallel-compaction
Don\(cqt use parallel compaction.

.V8 parallel-compile-tasks-for-eager-toplevel
Spawn parallel compilation tasks for eagerly compiled, top-level functions.

.V8 parallel-compile-tasks-for-lazy
Spawn parallel compilation tasks for all lazily-compiled functions.

.V8 no-parallel-marking
Don\(cqt use parallel marking in atomic pause.

.V8 no-parallel-pointer-update
Don\(cqt use parallel pointer update during compaction.

.V8 no-parallel-scavenge
Disable parallel scavenging.

.V8 parse-only
Only parse the sources.

.V8 no-partial-constant-pool
Disable use of partial constant pools (X64 only).

.V8 perf-basic-prof
Enable perf Linux profiler (basic support).

.V8 perf-basic-prof-only-functions
Only report function code ranges to perf (i.e. no stubs).

.V8 perf-prof
Enable perf Linux profiler (experimental annotate support).

.V8 perf-prof-annotate-wasm
Load WASM source-map and provide annotate support when used with \*(C!--perf-prof\fP (experimental).

.V8 perf-prof-delete-file
Remove the perf file right after creating it (for testing only).

.V8 perf-prof-unwinding-info
Enable unwinding info for perf Linux profiler (experimental).

.V8 no-polymorphic-inlining
Disable polymorphic inlining.

.V8 predictable
Enable predictable mode.

.V8 predictable-gc-schedule
Predictable garbage collection schedule.
Fixes heap growing, idle, and memory reducing behavior.

.V8 prepare-always-turbofan
Prepare for turning on always opt.

.V8 print-all-code
Enable all flags related to printing code.

.V8 print-all-exceptions
Print exception object and stack trace on each thrown exception.

.V8 print-ast
Print source AST.

.V8 print-break-location
Print source location on debug break.

.V8 print-builtin-code
Print generated code for builtins.

.V8 print-builtin-code-filter | String \(lq*\(rq
Filter for printing builtin code.

.V8 print-builtin-size
Print code size for builtins.

.V8 print-bytecode
Print bytecode generated by ignition interpreter.

.V8 print-bytecode-filter | String \(lq*\(rq
Filter for selecting which functions to print bytecode.

.V8 print-code
Print generated code.

.V8 print-code-verbose
Print more information for code.

.V8 print-deopt-stress
Print number of possible deopt points.

.V8 print-flag-values
Print all flag values of V8.

.V8 print-global-handles
Report global handles after garbage collection.

.V8 print-handles
Report handles after garbage collection.

.V8 print-maglev-code
Print Maglev code.

.V8 print-maglev-deopt-verbose
Print verbose deoptimisation info.

.V8 print-maglev-graph
Print Maglev graph.

.V8 print-opt-code
Print optimised code.

.V8 print-opt-code-filter | String \(lq*\(rq
Filter for printing optimised code.

.V8 print-opt-source
Print source code of optimised and inlined functions.

.V8 print-regexp-bytecode
Print generated regexp bytecode.

.V8 print-regexp-code
Print generated regexp code.

.V8 print-scopes
Print scopes.

.V8 print-wasm-code
Print WebAssembly code.

.V8 print-wasm-code-function-index | Int -1
Print WebAssembly code for function at
.VAR index .

.V8 print-wasm-stub-code
Print WebAssembly stub code.

.V8 prof
Log statistical profiling information (implies \*(C!--log-code\fP).

.V8 no-prof-browser-mode
Turn off browser-compatible mode when profiling with \*(C!--prof\fP.

.V8 prof-cpp
Like \*(C!--prof\fP, but ignore generated code.

.V8 prof-sampling-interval | Int 1000
Interval for \*(C!--prof\fP samples (in microseconds).

.V8 profile-deserialization
Print the time it takes to deserialise the snapshot.

.V8 random-gc-interval | Int 0
Collect garbage after \*(CBrandom\fP\*(CW(0,\fP
.VAR X )
allocations.
It overrides \*(C!--gc-interval\fP.

.V8 random-seed | Int 0
Default seed for initialising random generator (0, the default, means to use system random).

.V8 randomize-all-allocations
Randomise virtual memory reservations by ignoring any hints passed when allocating pages.

.V8 rcs
Report runtime call-counts and times.

.V8 rcs-cpu-time
Report runtime times in CPU time (the default is wall-time).

.V8 no-reclaim-unmodified-wrappers
Don\(cqt reclaim unmodified wrapper objects that are otherwise unreachable.

.V8 redirect-code-traces
Output deopt information and disassembly into file
.RI \(lqcode- pid - isolate-id .asm.\(rq

.V8 redirect-code-traces-to | String \(lq\(rq
Output deopt information and disassembly into the given file.

.V8 regexp-backtracks-before-fallback | Uint 50000
Number of backtracks during regexp execution before falling back to experimental engine.
Only used if \*(C!--enable-experimental-regexp-engine-on-excessive-backtracks\fP is set.

.V8 regexp-interpret-all
Interpret all regexp code.

.V8 no-regexp-optimization
Don\(cqt generate optimised regexp code.

.V8 no-regexp-peephole-optimization
Disable peephole optimisation for regexp bytecode.

.V8 regexp-possessive-quantifier
Enable possessive quantifier syntax for testing.

.V8 no-regexp-tier-up
Disable regexp interpreter.
The default behaviour is to tier-up to the compiler after the number of executions set by \*(C!--regexp-tier-up-ticks\fP

.V8 regexp-tier-up-ticks | Int 1
Set the number of executions for the regexp interpreter before tiering-up to the compiler.

.V8 no-rehash-snapshot
Don\(cqt rehash strings from the snapshot to override the baked-in seed.

.V8 reserve-inline-budget-scale-factor | Float 1.2
Scale factor of bytecode size used to calculate the inlining budget.

.V8 reset-interrupt-on-ic-update
On IC change, reset the interrupt budget for just that function.

.V8 retain-maps-for-n-gc | Int 2
Keeps maps alive for
.VAR N
old space garbage collections.

.V8 runtime-call-stats
Report runtime call-counts and times.

.V8 sampling-heap-profiler-suppress-randomness
Use constant sample intervals to eliminate test flakiness.

.V8 scavenge-separate-stack-scanning
Use a separate phase for stack-scanning during scavenge.

.V8 no-scavenge-task
Don\(cqt schedule scavenge tasks.

.V8 scavenge-task-trigger | Int 80
Scavenge task trigger in percent of the current heap limit.

.V8 no-script-streaming
Disable parsing on background.

.V8 semi-space-growth-factor | Int 2
Factor by which to grow the new space.

.V8 separate-gc-phases
Prevent overlapping between young and full garbage collection phases.

.V8 serialization-statistics
Collect statistics on serialized objects.

.V8 shared-string-table
Internalise strings into shared table.

.V8 no-short-builtin-calls
Don\(cqt put embedded builtins code into the code range for shorter builtin calls/jumps if system has \(rA4GB memory.

.V8 no-shortcut-strings-with-stack
Don\(cqt shortcut strings during garbage collection with stacks.

.V8 sim-arm64-optional-features | String \(lqnone\(rq
Enable optional simulator features for testing.
Supported values are \(lqnone\(rq and \(lqall\(rq.

.V8 single-generation
Allocate all objects from young generation to old generation.

.V8 single-threaded
Disable the use of background tasks.

.V8 single-threaded-gc
Disable the use of background GC tasks.

.V8 slow-histograms
Enable slow histograms with more overhead.

.V8 no-sparkplug
Disable Sparkplug baseline compiler.

.V8 sparkplug-filter | String \(lq*\(rq
Filter for Sparkplug baseline compiler.

.V8 sparkplug-needs-short-builtins
Only enable Sparkplug baseline compiler when \*(C!--short-builtin-calls\fP are also enabled.

.V8 stack-size | Int 984
Default size of stack region v8 is allowed to use (in kBytes).

.V8 stack-trace-limit | Int 10
Number of stack frames to capture.

.V8 stack-trace-on-illegal
Print stack trace when an illegal exception is thrown.

.V8 startup-blob | String \(lq\(rq
Write V8 startup blob file.
(\*(C!mksnapshot\fP only).

.V8 startup-src | String \(lq\(rq
Write V8 startup as \*(C+ src.
(\*(C!mksnapshot\fP only).

.V8 static-roots-src | String \(lq\(rq
Path for writing a fresh
.`` static-roots.h .
(\*(C!mksnapshot\fP only, build without static roots only).

.V8 stress-background-compile
Stress-test background parsing.

.V8 stress-compaction
Stress GC compaction to flush out bugs (implies \*(C!--force-marking-deque-overflows\fP).

.V8 stress-compaction-random
Stress GC compaction by selecting random percent of pages as evacuation candidates.
Overrides \*(C!--stress-compaction\fP.

.V8 stress-concurrent-allocation
Start background threads that allocate memory.

.V8 stress-concurrent-inlining
Create additional concurrent optimisation jobs, but throw away the result.

.V8 stress-concurrent-inlining-attach-code
Create additional concurrent optimisation jobs.

.V8 stress-flush-code
Stress code flushing.

.V8 stress-gc-during-compilation
Simulate GC/compiler thread race related to
.LK "https://crbug.com/v8/8520" .

.V8 stress-incremental-marking
Force incremental marking for small heaps and run it more often.

.V8 stress-inline
Set high thresholds for inlining to inline as much as possible.

.V8 stress-lazy-source-positions
Collect lazy source positions immediately after lazy compilation.

.V8 stress-maglev
Trigger Maglev compilation earlier.

.V8 stress-marking | Int 0
Force marking at random points between 0 and
.VAR X
(inclusive) percent of the regular marking start limit.

.V8 stress-per-context-marking-worklist
Use per-context worklist for marking.

.V8 stress-runs | Int 0
Number of stress runs.

.V8 stress-sampling-allocation-profiler | Int 0
Enable sampling allocation profiler with
.VAR X
as a sample interval.

.V8 stress-scavenge | Int 0
Force scavenge at random points between 0 and
.VAR X
(inclusive) percent of the new space capacity.

.V8 stress-snapshot
Disable sharing of the read-only heap for testing.

.V8 stress-turbo-late-spilling
Optimise placement of all spill instructions, not just loop-top phis.

.V8 stress-validate-asm
Try to validate everything as asm.js.

.V8 stress-wasm-code-gc
Stress-test garbage collection of WASM code.

.V8 strict-termination-checks
Enable strict terminating DCHECKs to prevent accidentally keeping on executing JS after terminating V8.
(experimental).

.V8 no-string-slices
Don\(cqt use string slices.

.V8 no-super-ic
Don\(cqt use an inline cache for super property loads.

.V8 suppress-asm-messages
Don\(cqt emit asm.js related messages (for golden file testing).

.V8 switch-table-min-cases | Int 6
The number of SMI integer cases present in the
.JS switch
statement before using the jump table optimisation.

.V8 switch-table-spread-threshold | Int 3
Allow the jump table used for
.JS switch
statements to span a range of integers roughly equal to this number times the number of clauses in the
.JS switch .

.V8 target-arch | String \(lq\(rq
The \*(C!mksnapshot\fP target architecture.
(\*(C!mksnapshot\fP only).

.V8 target-is-simulator
Instruct \*(C!mksnapshot\fP that the target is meant to run in the simulator and it can generate simulator-specific instructions.
(\*(C!mksnapshot\fP only).

.V8 target-os | String \(lq\(rq
The \*(C!mksnapshot\fP target OS.
(\*(C!mksnapshot\fP only).

.V8 test-small-max-function-context-stub-size
Enable testing the function context size overflow path by making the maximum size smaller.

.V8 testing-float-flag | Float 2.5
Float-flag.

.V8 testing-int-flag | Int 13
Testing_int_flag.

.V8 testing-maybe-bool-flag | maybe_bool unset
Testing_maybe_bool_flag.

.V8 testing-prng-seed | Int 42
Seed used for threading test randomness.

.V8 testing-string-flag | String \(lqHello,\~world!\(rq
String-flag.

.V8 no-text-is-readable
Don\(cqt try to read embedded `.text` sections in binary.

.V8 ticks-before-optimization | Int 3
The number of times we have to go through the interrupt budget before considering this function for optimisation.

.V8 trace
Trace JavaScript function calls.

.V8 trace-all-uses
Trace all use positions.

.V8 trace-allocation-stack-interval | Int -1
Print stack trace after
.VAR N
free-list allocations.

.V8 trace-allocations-origins
Show statistics about the origins of allocations.
Combine with \*(C!--no-inline-new\fP to track allocations from generated code.

.V8 trace-asm-parser
Verbose logging of asm.js parse failures.

.V8 trace-asm-scanner
Print tokens encountered by the asm.js scanner.

.V8 trace-asm-time
Print asm.js timing info to the console.

.V8 trace-backing-store
Trace backing store events.

.V8 trace-baseline
Trace baseline compilation.

.V8 trace-baseline-batch-compilation
Trace baseline batch compilation.

.V8 trace-baseline-concurrent-compilation
Trace baseline concurrent compilation.

.V8 trace-block-coverage
Trace collected block coverage information.

.V8 trace-code-range-allocation
Trace code range allocation process.

.V8 trace-compilation-dependencies
Trace code dependencies.

.V8 trace-compiler-dispatcher
Trace compiler dispatcher activity.

.V8 trace-concurrent-marking
Trace concurrent marking.

.V8 trace-concurrent-recompilation
Track concurrent recompilation.

.V8 trace-contexts
Trace contexts operations.

.V8 trace-creation-allocation-sites
Trace the creation of allocation sites.

.V8 trace-deopt
Trace deoptimisation.

.V8 trace-deopt-verbose
Use extra verbose deoptimisation tracing.

.V8 trace-detached-contexts
Trace native contexts that are expected to be garbage collected.

.V8 trace-duplicate-threshold-kb | Int 0
Print duplicate objects in the heap if their size is more than given threshold.

.V8 trace-elements-transitions
Trace elements transitions.

.V8 trace-environment-liveness
Trace liveness of local variable slots.

.V8 trace-evacuation
Report evacuation statistics.

.V8 trace-evacuation-candidates
Show statistics about the pages evacuation by the compaction.

.V8 trace-experimental-regexp-engine
Trace execution of experimental regexp engine.

.V8 trace-file-names
Include file names in trace-opt/trace-deopt output.

.V8 trace-flush-bytecode
Trace bytecode flushing.

.V8 trace-for-in-enumerate
Trace for-in enumerate slow-paths.

.V8 trace-fragmentation
Report fragmentation for old space.

.V8 trace-fragmentation-verbose
Report fragmentation for old space (detailed).

.V8 trace-gc
Print one trace line following each garbage collection.

.V8 trace-gc-freelists
Print details of each freelist before and after each major garbage collection.

.V8 trace-gc-freelists-verbose
Print details of freelists of each page before and after each major garbage collection.

.V8 trace-gc-heap-layout
Print layout of pages in heap before and after garbage collection.

.V8 no-trace-gc-heap-layout-ignore-minor-gc
Print trace line before and after minor-gc.

.V8 trace-gc-ignore-scavenger
Do not print trace line after scavenger collection.

.V8 trace-gc-nvp
Print one detailed trace line in name=value format after each garbage collection.

.V8 trace-gc-object-stats
Trace object counts and memory usage.

.V8 trace-gc-verbose
Print more details following each garbage collection.

.V8 trace-generalization
Trace map generalisation.

.V8 trace-heap-broker
Trace the heap broker (reports on missing data only).

.V8 trace-heap-broker-memory
Trace the heap broker memory (refs analysis and zone numbers).

.V8 trace-heap-broker-verbose
Trace the heap broker verbosely (all reports).

.V8 trace-idle-notification
Print one trace line following each idle notification.

.V8 trace-idle-notification-verbose
Print the heap state used by the idle notification.

.V8 trace-ignition-codegen
Trace the codegen of ignition interpreter bytecode handlers.

.V8 trace-ignition-dispatches-output-file | String \(lq\(rq
Write the bytecode handler dispatch table to the specified file
.RB ( d8 1
only).
Requires building with \*(C!--v8-enable-ignition-dispatch-counting\fP.

.V8 trace-incremental-marking
Trace progress of the incremental marking.

.V8 trace-isolates
Trace isolate state changes.

.V8 trace-lazy
Trace lazy compilation.

.V8 trace-liftoff
Trace Liftoff, the baseline compiler for WebAssembly.

.V8 trace-maglev-graph-building
Trace Maglev graph building.

.V8 trace-maglev-inlining
Trace Maglev inlining.

.V8 trace-maglev-inlining-verbose
Verbosely trace Maglev inlining.

.V8 trace-maglev-regalloc
Trace Maglev register allocation.

.V8 trace-migration
Trace object migration.

.V8 trace-minor-mc-parallel-marking
Trace parallel marking for the young generation.

.V8 trace-module-status
Trace status transitions of ECMAScript modules.

.V8 trace-mutator-utilization
Print mutator utilisation, allocation speed, GC speed.

.V8 trace-normalization
Print when objects are turned into dictionaries.

.V8 trace-opt
Trace optimised compilation.

.V8 trace-opt-stats
Trace optimised compilation statistics.

.V8 trace-opt-verbose
Use extra verbose optimised compilation tracing.

.V8 trace-osr
Trace on-stack replacement.

.V8 trace-parallel-scavenge
Trace parallel scavenge.

.V8 trace-pending-allocations
Trace calls to
.`` Heap::IsAllocationPending
that return
.`` true .

.V8 trace-pretenuring
Trace pretenuring decisions of HAllocate instructions.

.V8 trace-pretenuring-statistics
Trace allocation site pretenuring statistics.

.V8 trace-protector-invalidation
Trace protector cell invalidations.

.V8 trace-prototype-users
Trace updates to prototype user tracking.

.V8 trace-rail
Trace RAIL mode.

.V8 trace-regexp-assembler
Trace regexp macro assembler calls.

.V8 trace-regexp-bytecodes
Trace regexp bytecode execution.

.V8 trace-regexp-graph
Trace the regexp graph.

.V8 trace-regexp-parser
Trace regexp parsing.

.V8 trace-regexp-peephole-optimization
Trace regexp bytecode peephole optimisation.

.V8 trace-regexp-tier-up
Trace regexp tiering-up execution.

.V8 trace-representation
Trace representation types.

.V8 trace-serializer
Print code serializer trace.

.V8 trace-side-effect-free-debug-evaluate
Print debug messages for side-effect-free debug-evaluate for testing.

.V8 trace-store-elimination
Trace store elimination.

.V8 trace-stress-marking
Trace stress marking progress.

.V8 trace-stress-scavenge
Trace stress scavenge progress.

.V8 trace-temporal
Trace temporal code.

.V8 trace-track-allocation-sites
Trace the tracking of allocation sites.

.V8 trace-turbo
Trace generated TurboFan IR.

.V8 trace-turbo-alloc
Trace TurboFan\(cqs register allocator.

.V8 trace-turbo-ceq
Trace TurboFan\(cqs control equivalence.

.V8 trace-turbo-cfg-file | String \(lq\(rq
Trace turbo cfg graph (for C1 visualiser) to a given file name.

.V8 trace-turbo-escape
Enable tracing in escape analysis.

.V8 trace-turbo-file-prefix | String \(lqturbo\(rq
Trace turbo graph to a file with given prefix.

.V8 trace-turbo-filter | String \(lq*\(rq
Filter for tracing turbofan compilation.

.V8 trace-turbo-graph
Trace generated TurboFan graphs.

.V8 trace-turbo-inlining
Trace TurboFan inlining.

.V8 trace-turbo-jt
Trace TurboFan\(cqs jump threading.

.V8 trace-turbo-load-elimination
Trace TurboFan load elimination.

.V8 trace-turbo-loop
Trace TurboFan\(cqs loop optimisations.

.V8 trace-turbo-path | String \(lq\(rq
Directory to dump generated TurboFan IR to.

.V8 trace-turbo-reduction
Trace TurboFan\(cqs various reducers.

.V8 trace-turbo-scheduled
Trace TurboFan IR with schedule.

.V8 trace-turbo-scheduler
Trace TurboFan\(cqs scheduler.

.V8 trace-turbo-stack-accesses
Trace stack load/store counters for optimised code in run-time (x64 only).

.V8 trace-turbo-trimming
Trace TurboFan\(cqs graph trimmer.

.V8 no-trace-turbo-types
Don\(cqt trace TurboFan\(cqs types.

.V8 trace-unmapper
Trace the unmapping.

.V8 trace-verify-csa
Trace code stubs verification.

.V8 trace-wasm
Trace WASM function calls.

.V8 trace-wasm-code-gc
Trace garbage collection of WASM code.

.V8 trace-wasm-compilation-times
Print how long it took to compile each WASM function.

.V8 trace-wasm-compiler
Trace compiling of WASM code.

.V8 trace-wasm-decoder
Trace decoding of WASM code.

.V8 trace-wasm-inlining
Trace WASM inlining.

.V8 trace-wasm-instances
Trace creation and collection of WASM instances.

.V8 trace-wasm-interpreter
Trace interpretation of WASM code.

.V8 trace-wasm-lazy-compilation
Trace lazy compilation of WASM functions.

.V8 trace-wasm-loop-peeling
Trace WASM loop peeling.

.V8 trace-wasm-memory
Print all memory updates performed in WASM code.

.V8 trace-wasm-native-heap
Trace WASM native heap events.

.V8 trace-wasm-revectorize
Trace WASM revectorisation.

.V8 trace-wasm-serialization
Trace serialisation/deserialisation.

.V8 trace-wasm-speculative-inlining
Trace WASM speculative inlining.

.V8 trace-wasm-stack-switching
Trace WASM stack switching.

.V8 trace-wasm-streaming
Trace streaming compilation of WASM code.

.V8 trace-wasm-typer
Trace WASM typer.

.V8 trace-zone-stats
Trace zone memory usage.

.V8 trace-zone-type-stats
Trace per-type zone memory usage.

.V8 no-track-detached-contexts
Don\(cqt track native contexts that are expected to be garbage collected.

.V8 no-track-field-types
Don\(cqt track field types.

.V8 track-gc-object-stats
Track object counts and memory usage.

.V8 track-retaining-path
Enable support for tracking retaining path.

.V8 transition-strings-during-gc-with-stack
Transition strings during a full GC with stack.

.V8 trap-on-abort
Replace aborts by breakpoints.

.V8 no-turbo-allocation-folding
Disable TurboFan allocation folding.

.V8 no-turbo-cf-optimization
Don\(cqt optimise control flow in TurboFan.

.V8 turbo-collect-feedback-in-generic-lowering
Enable experimental feedback collection in generic lowering.

.V8 turbo-compress-translation-arrays
Compress translation arrays (experimental).

.V8 no-turbo-escape
Disable escape analysis.

.V8 no-turbo-fast-api-calls
Disable fast API calls from TurboFan.

.V8 turbo-filter | String \(lq*\(rq
Optimisation filter for TurboFan compiler.

.V8 turbo-force-mid-tier-regalloc
Always use the mid-tier register allocator.
Used for testing.

.V8 no-turbo-inline-array-builtins
Don\(cqt inline array builtins in TurboFan code.

.V8 no-turbo-inline-js-wasm-calls
Don\(cqt inline JavaScript-to-WebAssembly calls.

.V8 no-turbo-inlining
Disable inlining in TurboFan.

.V8 turbo-instruction-scheduling
Enable instruction scheduling in TurboFan.

.V8 no-turbo-jt
Disable jump threading in TurboFan.

.V8 no-turbo-load-elimination
Disable load elimination in TurboFan.

.V8 no-turbo-loop-peeling
Disable TurboFan loop peeling.

.V8 no-turbo-loop-rotation
Disable TurboFan loop rotation.

.V8 no-turbo-loop-variable
Disable TurboFan loop variable optimisation.

.V8 no-turbo-move-optimization
Don\(cqt optimise gap moves in TurboFan.

.V8 no-turbo-optimize-apply
Don\(cqt optimise
.JS Function.prototype.apply .

.V8 no-turbo-optimize-math-minmax
Don\(cqt optimise calls to
.JS Math.min
or
.JS Math.max
when called with a double array.

.V8 turbo-profiling
Enable basic block-profiling in TurboFan.

.V8 turbo-profiling-input | String \(lq\(rq
Path of the input file containing basic block counters for built-ins (\*(C!mksnapshot\fP only).

.V8 turbo-profiling-output | String \(lq\(rq
Emit data about basic block usage in builtins to this file (requires that V8 was built with
.`` v8_enable_builtins_profiling=true ).

.V8 turbo-profiling-verbose
Enable basic block-profiling in TurboFan, and include each function\(cqs schedule and disassembly in the output.

.V8 no-turbo-rab-gsab
Don\(cqt optimise
.JS ResizableArrayBuffer
/
.JS GrowableSharedArrayBuffer
in TurboFan.

.V8 no-turbo-rewrite-far-jumps
Don\(cqt rewrite far to near jumps (ia32,x64).

.V8 turbo-sp-frame-access
Use stack pointer-relative access to frame wherever possible.

.V8 no-turbo-splitting
Don\(cqt split nodes during scheduling in TurboFan.

.V8 turbo-stats
Print TurboFan statistics.

.V8 turbo-stats-nvp
Print TurboFan statistics in machine-readable format.

.V8 turbo-stats-wasm
Print TurboFan statistics of WASM compilations.

.V8 no-turbo-store-elimination
Disable store-store elimination in TurboFan.

.V8 turbo-stress-instruction-scheduling
Randomly schedule instructions to stress dependency tracking.

.V8 turbo-string-builder
Use TurboFan\(cqs fast string builder.

.V8 no-turbo-use-mid-tier-regalloc-for-huge-functions
Don\(cqt fall back to the mid-tier register allocator for huge functions.

.V8 no-turbo-verify
Don\(cqt verify TurboFan graphs at each phase.

.V8 no-turbo-verify-allocation
Don\(cqt verify register allocation in TurboFan.

.V8 turbo-verify-machine-graph | String \(lq\(rq
Verify TurboFan machine graph before instruction selection.

.V8 no-turbofan
Don\(cqt use the TurboFan optimising compiler.

.V8 turboshaft
Enable TurboFan\(cqs Turboshaft phases for JS (experimental).

.V8 turboshaft-assert-types
Generate runtime type assertions to test the Turboshaft type system.

.V8 turboshaft-opt-bisect-break | Uint64 18446744073709551615
Abort after a specified number of steps.
useful for bisecting optimisation bugs.

.V8 turboshaft-opt-bisect-limit | Uint64 18446744073709551615
Stop applying optional optimisations after a specified number of steps.
useful for bisecting optimisation bugs.

.V8 turboshaft-trace-reduction
Trace individual Turboshaft reduction steps.

.V8 turboshaft-trace-typing
Print typing steps of Turboshaft type inference.

.V8 turboshaft-verify-reductions
Check that Turboshaft reductions are correct with respect to inferred types.

.V8 turboshaft-wasm
Enable TurboFan\(cqs Turboshaft phases for WASM (experimental).

.V8 no-unbox-double-arrays
Don\(cqt automatically unbox arrays of doubles.

.V8 use-external-strings
Use external strings for source code.

.V8 no-use-ic
Don\(cqt use inline caching.

.V8 no-use-idle-notification
Don\(cqt use idle notification to reduce memory footprint.

.V8 no-use-libm-trig-functions
Don\(cqt use
.`` libm
trigonometry functions.

.V8 no-use-marking-progress-bar
Don\(cqt use a progress bar to scan large objects in increments when incremental marking is active.

.V8 no-use-osr
Don\(cqt use on-stack replacement.

.V8 use-strict
Enforce strict mode.

.V8 v8-os-page-size | Int 0
Override OS page size (in KBytes).

.V8 no-validate-asm
Don\(cqt validate asm.js modules before compiling.

.V8 verify-csa
Verify TurboFan machine graph of code stubs.

.V8 verify-heap
Verify heap pointers before and after garbage collection.

.V8 verify-heap-skip-remembered-set
Disable remembered set verification.

.V8 verify-predictable
Check that V8 behaves predictably.

.V8 no-verify-simplified-lowering
Don\(cqt verify graph generated by simplified lowering.

.V8 no-verify-snapshot-checksum
Don\(cqt verify snapshot checksums when deserialising snapshots.
Enable checksum creation and verification for code caches.
Enabled by default in debug builds and once per process for Android.

.V8 vtune-prof-annotate-wasm
Load WebAssembly source-map and provide annotate support. Used when
.`` v8_enable_vtunejit
is enabled.
Experimental.

.V8 warn-about-builtin-profile-data
Flag for \*(C!mksnapshot\fP, emit warnings when applying builtin profile data.

.V8 no-wasm-async-compilation
Disable actual asynchronous compilation for
.JS WebAssembly.compile .

.V8 no-wasm-bounds-checks
Disable bounds checks (disable for performance testing only).

.V8 wasm-caching-threshold | Int 1000000
The amount of WASM top-tier code that triggers the next caching event.

.V8 no-wasm-code-gc
Disable garbage collection of WASM code.

.V8 wasm-debug-mask-for-testing | Int 0
Bitmask of functions to compile for debugging, only applies if the tier is Liftoff.

.V8 wasm-disassembly-max-mb | size_t 1000
Maximum size of produced disassembly (in MB, approximate).

.V8 no-wasm-dynamic-tiering
Disable dynamic tier-up to the optimising compiler.

.V8 wasm-enforce-bounds-checks
Enforce explicit bounds check even if the trap handler is available.

.V8 wasm-final-types
Use final types by default for
.`` wasm-gc
.

.V8 wasm-fuzzer-gen-test
Generate a test case when running a WASM fuzzer.

.V8 no-wasm-generic-wrapper
Disallow use of the generic JS-to-WASM wrapper instead of per-signature wrappers.

.V8 wasm-inlining
Enable inlining of WASM functions into WASM functions (experimental).

.V8 wasm-inlining-budget | size_t 5000
Maximum graph size (in TF nodes) that allows inlining more.

.V8 wasm-inlining-max-size | size_t 500
Maximum function size (in wire bytes) that may be inlined.

.V8 no-wasm-lazy-compilation
Disable lazy compilation for all WASM modules.

.V8 wasm-lazy-validation
Enable lazy validation for lazily-compiled WASM functions.

.V8 no-wasm-loop-peeling
Disable loop peeling for WASM functions.

.V8 wasm-loop-peeling-max-size | size_t 1000
Maximum size for peeling.

.V8 no-wasm-loop-unrolling
Disable loop unrolling for WASM functions.

.V8 no-wasm-math-intrinsics
Don\(cqt intrinsify some Math imports into WASM.

.V8 wasm-max-code-space-size-mb | Uint 1024
Maximum size of a single WASM code space.

.V8 wasm-max-committed-code-mb | Uint 4095
Maximum committed code space for WASM (in MB).

.V8 wasm-max-initial-code-space-reservation | Int 0
Maximum size of the initial WASM code space reservation (in MB).

.V8 wasm-max-mem-pages | Uint 4294967295
Maximum number of 64KiB memory pages per WASM memory.

.V8 wasm-max-module-size | size_t 1073741824
Maximum allowed size of WASM modules.

.V8 wasm-max-table-size | Uint 10000000
Maximum table size of a WASM instance.

.V8 no-wasm-memory-protection-keys
Don\(cqt protect WASM code memory with PKU if available.

.V8 no-wasm-native-module-cache-enabled
Disable the native module cache.

.V8 wasm-num-compilation-tasks | Int 128
Maximum number of parallel compilation tasks for WASM.

.V8 no-wasm-opt
Disable WASM optimisation.

.V8 wasm-simd-ssse3-codegen
Allow WASM SIMD SSSE3 codegen.

.V8 wasm-speculative-inlining
Enable speculative inlining of
.`` call_ref
targets (experimental).

.V8 no-wasm-stack-checks
Disable stack checks (disable for performance testing only).

.V8 wasm-stack-switching-stack-size | Int 984
Default size of stacks for WASM stack-switching (in kB).

.V8 wasm-staging
Enable staged WASM features.

.V8 wasm-test-streaming
Use streaming compilation instead of async compilation for tests.

.V8 wasm-tier-mask-for-testing | Int 0
Bitmask of functions to compile with TurboFan instead of Liftoff.

.V8 no-wasm-tier-up
Disable tier-up to the optimising compiler (requires \*(C!--liftoff\fP to have an effect).

.V8 wasm-tier-up-filter | Int -1
Only tier-up function with this index.

.V8 wasm-tiering-budget | Int 1800000
Budget for dynamic tiering (rough approximation of bytes executed).

.V8 wasm-trace-native | String \(lq\(rq
Select which native code sequence to use for WASM trace instruction:
.`` default
or
.`` cpuid .

.V8 no-win64-unwinding-info
Disable unwinding info for Windows/x64.

.V8 no-write-code-using-rwx
Flip permissions to `rw` to write page instead of `rwx`.

.V8 write-protect-code-memory
Write-protect code memory.

.V8 zone-stats-tolerance | size_t 1048576
Report a tick only when allocated zone memory changes by this amount.
.\" END SCRAPE

.SH SEE ALSO
.BR node (1)

.SH AUTHORS
Copyright \(co 2014, the V8 project authors.
All rights reserved.
.
.PP
Manpage adaption and programming copyright \(co 2016-2023,
.MT gardnerjohng@gmail.com
Alhadis
.ME .
All rights reserved.
Released under the ISC license.
